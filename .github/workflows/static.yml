# This workflow builds, tests, and deploys the website to GitHub Pages
name: Build and Deploy (main only) content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Runs when pull request is opened or reopened or when the head branch of the pull request is updated
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# These permissions are required for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

# Environment variables for the workflow
env:
  HUSKY: 0 # Disable Husky git hooks during CI/CD
  NODE_ENV: development

jobs:
  # Audit job: Runs security audits and linting checks
  audit:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Update browser compatibility database
        run: npx update-browserslist-db@latest
      - name: Security audit
        run: npm run security:audit
      - name: Lint code
        run: npm run lint

  # Build job: Compiles the website and creates the distribution files
  build:
    runs-on: ubuntu-latest
    needs: audit # Requires audit job to pass first
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Build website
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  # Test job: Runs Cypress tests against the built website
  test:
    runs-on: ubuntu-latest
    needs: build # Requires build job to complete first
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
      - run: npm ci
      - uses: actions/download-artifact@v4.1.4
        with:
          name: dist
          path: dist/
      - run: npm run preview& # Start local preview server
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          config: baseUrl=http://localhost:4321
      # Upload test screenshots regardless of test outcome
      - uses: actions/upload-artifact@v4
        with:
          name: cypress-test-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      # Upload test videos only if tests fail
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-test-videos
          path: cypress/videos
          if-no-files-found: ignore

  # Deploy job: Deploys the website to GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test # Requires test job to pass first
    if: github.ref == 'refs/heads/main' # Only deploy from main branch
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Verify job: Runs Cypress tests against the live website
  verify:
    runs-on: ubuntu-latest
    needs: deploy # Requires deploy job to complete first
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
      - run: npm ci
      - name: Run Cypress verification
        uses: cypress-io/github-action@v6
        with:
          config: baseUrl=http://www.garbereder.com
      # Upload verification screenshots regardless of test outcome
      - uses: actions/upload-artifact@v4
        with:
          name: cypress-verify-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      # Upload verification videos only if tests fail
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-verify-videos
          path: cypress/videos
          if-no-files-found: ignore
