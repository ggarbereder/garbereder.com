# This workflow handles version bumping for pull requests
name: Version Bump

on:
  # Runs when pull request is opened or reopened or when the head branch of the pull request is updated
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow pushing to the PR branch
permissions:
  contents: write

# Environment variables for the workflow
env:
  HUSKY: 0 # Disable Husky git hooks during CI/CD
  NODE_ENV: development

jobs:
  # Version job: Handles version bumping for pull requests
  version:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Bump version
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Get current version from PR branch
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Fetch main branch and get its version
          git fetch origin main:main
          MAIN_VERSION=$(git show main:package.json | jq -r .version)
          echo "Main version: $MAIN_VERSION"

          if [[ $(echo -e "$CURRENT_VERSION\n$MAIN_VERSION" | sort -V | head -n1) == "$CURRENT_VERSION" ]]; then
            echo "Bumping version as current version ($CURRENT_VERSION) is same or lower than main version ($MAIN_VERSION)"
            npm run version:patch
            git add package.json package-lock.json
            git commit -m "chore: bump version [skip ci]"
            git push origin ${{ github.ref_name }}
          else
            echo "Skipping version bump as current version ($CURRENT_VERSION) is higher than main version ($MAIN_VERSION)"
          fi
